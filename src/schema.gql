# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: String!
  name: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CartItem {
  id: String!
  quantity: Float!
}

type OrderItem {
  id: String!
  quantity: Int!
}

type User {
  id: String!
  username: String!
  role: String!
}

type SignUpUserResponseDto {
  createdUserUuid: String!
  role: UserRole!
}

enum UserRole {
  Admin
  Customer
}

type SignInUserResponse {
  accessToken: String!
}

type DeleteProductResponseDto {
  affectedRows: Int!
}

type ProductDTO {
  id: String!
  name: String!
  price: Float!
  imageUrl: String
  disabled: Boolean!
  createdAt: DateTime!
  modifiedAt: DateTime!
  categoryId: String!
  inventoryLevel: Int!
}

type LikeProductResponseDto {
  likedProductsByUser: [ProductDTO!]!
}

type CategoryPaginatedResult {
  data: [Category!]
  total: Int!
  page: Int!
  limit: Int!
}

type ProductPaginatedResult {
  data: [ProductDTO!]
  total: Int!
  page: Int!
  limit: Int!
}

type CartDTO {
  id: String!
  createdAt: DateTime!
  modifiedAt: DateTime!
  userId: String!
  cartIems: [CartItem!]!
}

type OrderDTO {
  id: String!
  userId: String!
  orderItems: [OrderItem!]!
  createdAt: DateTime!
  orderStatus: OrderStatus!
}

enum OrderStatus {
  Pending
  Shipped
  Delivered
  Cancelled
}

type OrderPaginatedResult {
  data: [OrderDTO!]
  total: Int!
  page: Int!
  limit: Int!
}

type Query {
  getUsers: [User!]!
  getCategories(page: Int, limit: Int): CategoryPaginatedResult!
  getProducts(page: Int, limit: Int, categoryId: String): ProductPaginatedResult!
  getProductDetail(productId: String!): ProductDTO!
  getOrder(orderId: String!): OrderDTO!
  getOrders(userId: String): [OrderDTO!]!
  getAllOrders(page: Int, limit: Int): OrderPaginatedResult!
  getUserCart(userId: String): CartDTO!
}

type Mutation {
  signUp(createUserInput: CreateUserDto!, storeKey: String): SignUpUserResponseDto!
  signIn(signInUserInput: SignInUserDto!): SignInUserResponse!
  createCategory(createCategoryDto: CreateProductCategoryDto!): Category!
  createProduct(createProductDto: CreateProductDto!): ProductDTO!
  updateProduct(productId: String!, updateProductDto: UpdateProductDto!): ProductDTO!
  deleteProduct(productId: String!): DeleteProductResponseDto!
  likeProduct(productId: String!): LikeProductResponseDto!
  createOrderFromCart(userId: String): OrderDTO!
  updateOrderStatus(orderId: String!, orderStatus: OrderStatus!): OrderDTO!
  addProductToCart(addProductToCartDto: AddProductToCartDto!, userId: String): CartDTO!
}

input CreateUserDto {
  username: String!
  password: String!
  role: String
}

input SignInUserDto {
  username: String!
  password: String!
}

input CreateProductCategoryDto {
  name: String!
}

input CreateProductDto {
  name: String!
  price: Float!
  categoryId: String!
  imageUrl: String
  disabled: Boolean
  invenotryLevel: Int
}

input UpdateProductDto {
  name: String
  price: Float
  categoryId: String
  imageUrl: String
  disabled: Boolean
  inventoryLevel: Int
}

input AddProductToCartDto {
  productId: String!
  quantity: Int!
}